#!/usr/bin/env python3
import requests
from urllib.parse import urljoin, urlparse, parse_qs, urlencode
from bs4 import BeautifulSoup
import argparse

def crawl_urls(base_url, scope_domain, max_pages=50):
    to_crawl = [base_url]
    crawled = set()
    urls_found = []
    while to_crawl and len(crawled) < max_pages:
        url = to_crawl.pop(0)
        if url in crawled:
            continue
        crawled.add(url)
        try:
            resp = requests.get(url, timeout=5)
            if resp.status_code != 200:
                continue
            urls_found.append(url)
            soup = BeautifulSoup(resp.text, 'html.parser')
            for link in soup.find_all('a', href=True):
                href = link['href']
                full_url = urljoin(url, href)
                parsed = urlparse(full_url)
                if scope_domain not in parsed.netloc:
                    continue
                if full_url not in crawled and full_url not in to_crawl:
                    to_crawl.append(full_url)
        except Exception:
            continue
    return urls_found

def test_xss(url):
    xss_payloads = [
        '<script>alert(1)</script>',
        '"><script>alert(1)</script>',
        "'><script>alert(1)</script>",
    ]
    parsed = urlparse(url)
    qs = parse_qs(parsed.query)
    vuln_found = []
    if not qs:
        return vuln_found
    for param in qs:
        for payload in xss_payloads:
            new_qs = qs.copy()
            new_qs[param] = [payload]
            new_query = urlencode(new_qs, doseq=True)
            test_url = parsed._replace(query=new_query).geturl()
            try:
                resp = requests.get(test_url, timeout=5)
                if payload in resp.text:
                    vuln_found.append((test_url, param, payload))
            except Exception:
                continue
    return vuln_found

def main():
    parser = argparse.ArgumentParser(description='TEOTW2 - XSS Crawler & Scanner')
    parser.add_argument('-u', '--url', required=True, help='Base URL to scan')
    parser.add_argument('--xss', action='store_true', help='Enable XSS scanning')
    parser.add_argument('--crawl', action='store_true', help='Enable crawling')
    parser.add_argument('-m', '--method', choices=['get'], default='get', help='HTTP method for scanning')
    parser.add_argument('-p', '--pages', type=int, default=50, help='Max pages to crawl')
    parser.add_argument('--scope', required=True, help='Scope domain for crawling')
    parser.add_argument('--clear', action='store_true', help='Clear extra messages for cleaner output')
    parser.add_argument('--clear-separate', action='store_true', help='Clear output and separate crawl and XSS URLs')
    parser.add_argument('-o', '--output', help='Output file to write results')

    args = parser.parse_args()

    logo = r"""
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░▓█▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓█░░░█▓▓▓▓▓▓▓▓█░░█▓▓▒▓▓▓▓▓▓▓▓▓█▓▓▓▓░░░▓▓▓▒▒░░█▓▓▓▓░░█▓▓▓▓▓▓▓█░▓░░░░░░
░░░░░▓█▒██████████▓██████████████░█▒██████████▓█████████████▓░▓██▓▓░▓▒████░░▓█████▓█████████▓█░░░░░░
░░░░░▓▓████▓██▓██████████████████░▓██▓██████▓██▓█████▓██▓████░█████░█████▓░▒▓██▒░████▓████████░░░░░░
░░░░░░░░░░▒▓██▓▓░░░░█████░░░░░░░░░▓██▓█░░░░▒▓██▓░░░░█▓██▒░░░░░█▓██▓░▓████▒▓█████░█▓▓▓█░░░█████░░░░░░
░░░░░░░░░░▒▓██▓▓░░░░████▓▓▓▒▒▒█░░░▓██▓█░░░░▒▓██▓░░░░█▓██▒░░░░░░▓██▓█▓██▓███▓██▒█░░░░░░░░▓█████░░░░░░
░░░░░░░░░░▒▓██▓▓░░░░█████████▓█░░░▓██▓█░░░░▒▓██▓░░░░█▓██▒░░░░░░███████▓▓██▓▒██▓░░░░░░░█████▓▒▓░░░░░░
░░░░░░░░░░▒▓██▓▓░░░░███████████░░░▓██▓█░░░░▒▓██▒░░░░█▓██▒░░░░░░░▓██▓██████▓████░░░░░█▓███▒█▒░░░░░░░░
░░░░░░░░░░▒▓██▓▓░░░░█████░░░░░░░░░▓██▓█░░░░░▓██▓░░░░█▓██▒░░░░░░░█████▓█░▓████▓░░░░█▓███▓█░░░░░░░░░░░
░░░░░░░░░░▒▓██▓▓░░░░█████████████░▓██▓██████▓██▓░░░░█▓██▒░░░░░░░█▓███▓░░██████░░░████▓▓▓██████░░░░░░
░░░░░░░░░░▒▓██▓▓░░░░█████████████░█▓██████████▓█░░░░█▓██▒░░░░░░░░▓████░░█▓██▒█░░░█████████████░░░░░░
░░░░░░░░░░▒████▒░░░░█████████████░░░██████████░░░░░░█████░░░░░░░░████▓░░░████░░░░█████████████░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░▓▓███████████████████████████████░░░░░░░░░░░░░░░░░░████████████████████████████████▓░░░░░░░░
░░░░░░░░░░▓██▓███▓▓▓▓▓▓▓▓▓▓▓▓█▓▓▓▓▓▓▓▓▓▓███▓▓░░░░░░░░░░▒░███▓▓▓▓▓▓▓▓▓▓█▓▓▓▓▓▓▓▓▓▓▓▓███▓██▒░░░░░░░░░░
░░░░░░░░░░░░▓██▓█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓███████▓██░▓░░░░░░░░▓░██▓███████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█▓██▒░░░░░░░░░░░░
░░░░░░░░░░░░░░▒██▓▓▓▓▓▓▓▓▓▓▓█▓▓▓▓▓▓▓▓▓▓▓▓▓█▓▓█░▓░░░░▓░█▓▓█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░▒██▓█▓▓▓▓▓█▓▓▓▓▓▓█▓▓▓▓█████▓▓█▒█░▓▓░█▓██▓█████▓▓▓▓█▓▓▓▓▓▓█▓▓▓▓▓█▓██░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░██▓█▓▓▓▓▓▓███▓▓▓█▓▓▓▓▓▓█▓▓▓██▓██▓██▓▓▓█▓▓▓▓▓▓█▓▓▓▓███▓▓▓▓▓█▓██░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░██▒█▓▓██████▓▓▓▓██████▓▓▓▓▓████▓▓▓▓▓██████▓▓▓▓██████▓▓█▓██░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░██████▓▓██▓█▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓█▓██▓▓██████░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓▓▓▓▓▓▓█▓▓▓▓██▓▓▓█▓▓▓▓▓▓█▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓█▓▓▓▓▓██▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓██▓▓▓▓▓█▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓█▓▓▓▓▓████▓██▓█▓▓▓▓▓▓▓▓▓▓█▓██▓████▓▓▓▓▓█▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓█▓▓▓▓▓███████▓▓▓█▓▓▓▓▓▓█▓▓▓███████▓▓▓▓▓█▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓█▓▓▓▓▓▓▓███████▓▓▓▓▓▓▓▓▓▓███████▓▓▓▓▓▓▓█▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓█▓▓▓▓▓▓█▓▓███████▓▓▓▓▓▓███████▓▓█▓▓▓▓▓▓█▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓█▓▓▓▓▓▓▓▓█▓██████▓▓▓▓▓▓██████▓█▓▓▓▓▓▓▓▓█▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓█▓▓▓▓▓▓▓▓█▓██▓▓██▓▓▓▓▓▓██▓▓██▓█▓▓▓▓▓▓▓▓█▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓█▓▓▓▓▓▓▓▓█▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓█▓▓▓▓▓▓▓▓█▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓█▓▓▓▓▓▓▓▓█▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓█▓▓▓▓▓▓▓▓█▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓█▓▓█▓▓▓▓▓█▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓█▓▓▓▓▓█▓▓█▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓█▓▓▓▓▓▓▓▓█▓██▓▓▓▓█▓▓▓▓█▓▓▓▓██▓█▓▓▓▓▓▓▓▓█▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓█▓▓▓▓▓▓▓▓█▓██▓▓▓▓▓▓██▓▓▓▓▓▓██▓█▓▓▓▓▓▓▓▓█▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓█▓▓▓▓▓█▓▓█▓██▓▓▓▓▓▓▓█▓▓▓▓▓▓██▓█▓▓█▓▓▓▓▓█▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓█▓▓▓▓▓▓▓██▓██▓▓▓▓▓▓▓█▓▓▓▓▓▓██▓██▓▓▓▓▓▓▓█▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓██▓█▓▓▓▓▓▓▓█▓██▓▓▓▓█▓▓█▓█▓▓▓▓██▓█▓▓▓▓▓▓▓█▓██▓░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓░██▓█▓██▓██░█▓▓▓▓▓▓██▓▓▓▓▓▓█░██▓██▓█▒██░▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██▒▓██░░▓█▓▓▓▓▓▓██▓▓▓▓▓▓█▓░░██▓▓██░▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓░█░▒░░▓█▓▓▓▓▓▓██▓▓▓▓▓▓█▓░░▒░█░▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓▓▓▓▓▓██▓▓▓▓▓▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█▓▓▓▓▓▓██▓▓▓▓▓▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓▓█▓█▓▓▓██▓▓▓█▓██▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓██▓█▓██▓█▓██▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒██▓██▓██▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░  
                    01010100 01000101 01001111 01010100 01010111 00110010 
                    TEOTW2 - XSS Crawler & Scanner                                                                                                        
    """
    print(logo)

    urls_to_scan = []
    vuln_found = []

    if args.crawl:
        urls_to_scan = crawl_urls(args.url, args.scope, max_pages=args.pages)
    else:
        urls_to_scan = [args.url]

    if args.xss:
        for url in urls_to_scan:
            if '?' in url:
                vulns = test_xss(url)
                vuln_found.extend(vulns)

    output_lines = []

    if args.clear_separate:
        for url in urls_to_scan:
            output_lines.append(url)
        output_lines.append("\n---\n")
        for url, param, payload in vuln_found:
            output_lines.append(f"{url} [GET param: {param}] [payload: {payload}]")
    else:
        for url in urls_to_scan:
            output_lines.append(url)
        for url, param, payload in vuln_found:
            output_lines.append(f"{url} [GET param: {param}] [payload: {payload}]")

    # Always print to screen
    for line in output_lines:
        print(line)

    # If output file is provided, write results to it (without logo)
    if args.output:
        with open(args.output, 'w') as f:
            for line in output_lines:
                f.write(line + '\n')

if __name__ == "__main__":
    main()
